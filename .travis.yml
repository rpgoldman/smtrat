language: generic
dist: xenial

cache:
  apt: true
  directories:
    - $HOME/usr/
    - $HOME/carl/
    - build/resources

addons:
  apt:
    sources: &sources_base
      - ubuntu-toolchain-r-test
    packages: &packages_base
      - texinfo
      - time
      - uuid-dev

matrix:
  include:
    - stage: dependencies
      os: linux
      compiler: clang++-5.0
      env: CC=clang-5.0 CXX=clang++-5.0
      script: TASK=dependencies source .ci/build.sh
      addons:
        apt:
          sources:
          - *sources_base
          packages: [*packages_base, clang-5.0, libstdc++-8-dev]
    - stage: dependencies
      os: linux
      compiler: clang++-6.0
      env: CC=clang-6.0 CXX=clang++-6.0
      script: TASK=dependencies source .ci/build.sh
      addons:
        apt:
          sources:
          - *sources_base
          - llvm-toolchain-xenial-6.0
          packages: [*packages_base, clang-6.0, libstdc++-8-dev]
    - stage: dependencies
      os: linux
      compiler: clang++-7.0
      env: CC=clang-7 CXX=clang++-7
      script: TASK=dependencies source .ci/build.sh
      addons:
        apt:
          sources:
          - *sources_base
          - llvm-toolchain-xenial-7
          packages: [*packages_base, clang-7, libstdc++-8-dev]
    - stage: dependencies
      os: linux
      compiler: clang++-8.0
      env: CC=clang-8 CXX=clang++-8
      script: TASK=dependencies source .ci/build.sh
      addons:
        apt:
          sources:
          - *sources_base
          - llvm-toolchain-xenial-8
          packages: [*packages_base, clang-8, libstdc++-8-dev]
    - stage: dependencies
      os: linux
      compiler: clang++-9.0
      env: CC=clang-9 CXX=clang++-9
      script: TASK=dependencies source .ci/build.sh
      addons:
        apt:
          sources:
          - *sources_base
          - sourceline: 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial main'
            key_url: https://apt.llvm.org/llvm-snapshot.gpg.key
          packages: [*packages_base, clang-9, libstdc++-8-dev]
    - stage: dependencies
      os: linux
      compiler: g++-7
      env: CC=gcc-7 CXX=g++-7
      script: TASK=dependencies MAKE_PARALLEL=-j1 source .ci/build.sh
      addons:
        apt:
          sources:
          - *sources_base
          packages: [*packages_base, g++-7]
    - stage: dependencies
      os: linux
      compiler: g++-8
      env: CC=gcc-8 CXX=g++-8
      script: TASK=dependencies MAKE_PARALLEL=-j1 source .ci/build.sh
      addons:
        apt:
          sources:
          - *sources_base
          packages: [*packages_base, g++-8]
    - stage: dependencies
      os: osx
      osx_image: xcode9.3
      script: TASK=dependencies source .ci/build.sh
      addons:
        homebrew:
          packages:
          - llvm
    - stage: dependencies
      os: osx
      osx_image: xcode9.4
      script: TASK=dependencies source .ci/build.sh
      addons:
        homebrew:
          packages:
          - llvm
    - stage: dependencies
      os: osx
      osx_image: xcode10
      script: TASK=dependencies source .ci/build.sh
      addons:
        homebrew:
          packages:
          - llvm
    - stage: dependencies
      os: osx
      osx_image: xcode10.1
      script: TASK=dependencies source .ci/build.sh
      addons:
        homebrew:
          packages:
          - llvm
    - stage: build
      os: linux
      compiler: clang++-5.0
      env: CC=clang-5.0 CXX=clang++-5.0
      script: source .ci/build.sh
      addons:
        apt:
          sources:
          - *sources_base
          packages: [*packages_base, clang-5.0, libstdc++-8-dev]
    - stage: build
      os: linux
      compiler: clang++-6.0
      env: CC=clang-6.0 CXX=clang++-6.0
      script: source .ci/build.sh
      addons:
        apt:
          sources:
          - *sources_base
          - llvm-toolchain-xenial-6.0
          packages: [*packages_base, clang-6.0, libstdc++-8-dev]
    - stage: build
      os: linux
      compiler: clang++-7.0
      env: CC=clang-7 CXX=clang++-7
      script: source .ci/build.sh
      addons:
        apt:
          sources:
          - *sources_base
          - llvm-toolchain-xenial-7
          packages: [*packages_base, clang-7, libstdc++-8-dev]
    - stage: build
      os: linux
      compiler: clang++-8.0
      env: CC=clang-8 CXX=clang++-8
      script: source .ci/build.sh
      addons:
        apt:
          sources:
          - *sources_base
          - llvm-toolchain-xenial-8
          packages: [*packages_base, clang-8, libstdc++-8-dev]
    - stage: build
      os: linux
      compiler: clang++-9.0
      env: CC=clang-9 CXX=clang++-9
      script: source .ci/build.sh
      addons:
        apt:
          sources:
          - *sources_base
          - sourceline: 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial main'
            key_url: https://apt.llvm.org/llvm-snapshot.gpg.key
          packages: [*packages_base, clang-9, libstdc++-8-dev]
    - stage: build
      os: linux
      compiler: g++-7
      env: CC=gcc-7 CXX=g++-7
      script: MAKE_PARALLEL=-j1 source .ci/build.sh
      addons:
        apt:
          sources:
          - *sources_base
          packages: [*packages_base, g++-7]
    - stage: build
      os: linux
      compiler: g++-8
      env: CC=gcc-8 CXX=g++-8
      script: MAKE_PARALLEL=-j1 source .ci/build.sh
      addons:
        apt:
          sources:
          - *sources_base
          packages: [*packages_base, g++-8]
    - stage: build
      os: osx
      osx_image: xcode9.3
      script: source .ci/build.sh
      addons:
        homebrew:
          packages:
          - llvm
    - stage: build
      os: osx
      osx_image: xcode9.4
      script: source .ci/build.sh
      addons:
        homebrew:
          packages:
          - llvm
    - stage: build
      os: osx
      osx_image: xcode10
      script: source .ci/build.sh
      addons:
        homebrew:
          packages:
          - llvm
    - stage: build
      os: osx
      osx_image: xcode10.1
      script: source .ci/build.sh
      addons:
        homebrew:
          packages:
          - llvm
    - stage: build
      os: linux
      compiler: g++-8
      env: CC=gcc-8 CXX=g++-8 TASK=doxygen
      if: branch = master
      script: MAKE_PARALLEL=-j1 source .ci/build.sh
      addons:
        apt:
          sources:
          - *sources_base
          packages: [*packages_base, g++-8, doxygen, ghostscript, latex-xcolor, lmodern, pgf, texinfo, texlive, texlive-font-utils, texlive-latex-extra]
    - stage: build
      os: linux
      compiler: clang++-9.0
      env: CC=clang-9 CXX=clang++-9 TASK=tidy
      script: source .ci/build.sh
      addons:
        apt:
          sources:
          - *sources_base
          - sourceline: 'deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial main'
            key_url: https://apt.llvm.org/llvm-snapshot.gpg.key
          packages: [*packages_base, clang-9, libstdc++-8-dev]
  allow_failures:
    - stage: dependencies
      os: linux
      env: CC=clang-8 CXX=clang++-8
    - stage: dependencies
      os: linux
      env: CC=clang-9 CXX=clang++-9
    - stage: dependencies
      os: linux
      env: CC=gcc-7 CXX=g++-7
    - stage: dependencies
      os: linux
      env: CC=gcc-8 CXX=g++-8
    - stage: build
      os: linux
      env: CC=clang-8 CXX=clang++-8
    - stage: build
      os: linux
      env: CC=clang-9 CXX=clang++-9
    - stage: build
      os: linux
      env: CC=gcc-7 CXX=g++-7
    - stage: build
      os: linux
      env: CC=gcc-8 CXX=g++-8
    - stage: build
      os: osx
      osx_image: xcode9.3
    - stage: build
      os: osx
      osx_image: xcode9.4
    - stage: build
      os: osx
      osx_image: xcode10
    - stage: build
      os: osx
      osx_image: xcode10.1
    - stage: build
      os: linux
      env: CC=clang-9 CXX=clang++-9 TASK=tidy

before_install:
  - cd .ci/ && source setup_travis.sh && cd ../

notifications:
  email:
    on_failure: always
    on_success: change
  irc:
    channels:
      - "chat.freenode.net#carl"
    template:
      - "Commit to %{repository_name}/%{branch} from %{author}"
      - "%{commit_message}"
      - "Build: %{message} %{duration} %{build_url}"
  slack:
    rooms:
      secure: "mL8Ku2omjsseTL5P2R2P3ddCedg8u9qSTKRjKNBhOYRJvpKNrIWr9fouP1tGsah9GBF+HL/JFWlA2sckCL9pURx6TdICHSgik1V/48QhpPKrV+ZkCmKenw3+hdXQY3YP36Xpj/SCCSMyRovA6kacWL3k0gRGJ++dxZYrYF7oVd8ltwxNC6+1o9HCmJnueCME5GBCKCgtOhYOr7izkjQ9wtFJvCmxHcI9EZxMQjWXmcHfItaWD1YFhR0/7AbsxJ9xtYZD0OMJrOgRBau671wV603a0EctIPcv0uKzjSsvB3yLndGOcMRsA8x/OPrFoOHbpLZ9d4O9gY3lvW5oueV+KTbbvHMSxJtvB9q3F0ZJSDHoG7cn1E2xb4gOHRdu4FhwqYy9abUM0DVUI/f7GaL+DMgzKeTduLB6h4GhtGR7fcWaBpCJYN1k8o33Vf/OPwaoPVCeiDRQIFqrqjDRcBc7ONe096WAf61albpMW6iCr5cBHy/j9XqEAGHu6sYftogWm/YVRqSF9+vnZy41cfQU+SYlFtWusUepqX1X/Kei+MCwESuddBnWj+oX8N8nreI8ql2IHG79IQVeEZZKMowxmo2IMsNnvkMyRTQsOmFY2u4NMRGga71QRCSbNvl01KxQ2ilyQ8Gu9Kjbs1QJ76jhOutChCzwOBAgc5aREdNCaV0="
